<!--
    Copyright (c) Microsoft Corporation.  All rights reserved.
    The MIT License (MIT)
    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the "Software"), to deal
    in the Software without restriction, including without limitation the rights
    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the Software is
    furnished to do so, subject to the following conditions:
    The above copyright notice and this permission notice shall be included in
    all copies or substantial portions of the Software.
    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
    THE SOFTWARE.
-->

<Page x:Class="ContosoApp.Views.CustomerDetailPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
      xmlns:converter="using:ContosoApp.ValueConverters"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="using:ContosoApp.Views"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:models="using:ContosoModels"
      xmlns:stateTriggers="using:ContosoApp.StateTriggers"
      xmlns:uc="using:ContosoApp.UserControls"
      NavigationCacheMode="Enabled"
      mc:Ignorable="d">

    <Page.Resources>
        <converter:NullToVisibilityConverter x:Key="nullToVisConverter"/>
        <converter:BooleanToVisibilityConverter x:Key="boolToVisConverter"/>
        <converter:BooleanInverterConverter x:Key="boolInverterConverter"/>
        <converter:DateStringFormatConverter x:Key="dateStringFormatConverter"/>
        <converter:StringVisibilityConverter x:Key="stringVisConverter"/>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <RelativePanel>
            <uc:PageHeader x:Name="PageTitle" Margin="0,0,0,20">
                <uc:PageHeader.HeaderContent>
                    <TextBlock x:Name="PageHeaderText"
                               Style="{StaticResource PageTitleTextBlockStyle}"
                               Text="{x:Bind ViewModel.Name, Mode=OneWay}"/>
                </uc:PageHeader.HeaderContent>
            </uc:PageHeader>

            <!--
                On Windows 10, version 1607 or later, set DefaultLabelPosition to Right in code.
                See CommandBar_Loaded event handler.
            -->
            <CommandBar x:Name="mainCommandBar"
                        HorizontalAlignment="Stretch"
                        Background="Transparent"
                        Loaded="CommandBar_Loaded"
                        RelativePanel.LeftOf="CustomerSearchBox"
                        RelativePanel.RightOf="PageTitle">
                <AppBarButton Command="{x:Bind ViewModel.SaveCommand}"
                              Icon="Save"
                              Label="Save"
                              Visibility="{x:Bind ViewModel.IsInEdit, Converter={StaticResource boolToVisConverter}, Mode=OneWay}"/>
                <AppBarButton Click="CancelEditButton_Click"
                              Command="{x:Bind ViewModel.CancelEditsCommand}"
                              Icon="Cancel"
                              Label="Cancel"
                              Visibility="{x:Bind ViewModel.IsInEdit, Converter={StaticResource boolToVisConverter}, Mode=OneWay}"/>
                <AppBarSeparator Visibility="{x:Bind ViewModel.IsInEdit, Converter={StaticResource boolToVisConverter}, Mode=OneWay}"/>
                <AppBarButton Command="{x:Bind ViewModel.StartEditCommand}"
                              Icon="Edit"
                              IsEnabled="{x:Bind ViewModel.IsInEdit, Converter={StaticResource boolInverterConverter}, Mode=OneWay}"
                              Label="Edit"/>
                <AppBarButton Click="AddOrder_Click"
                              Icon="Shop"
                              Label="Add order"
                              Visibility="{x:Bind ViewModel.IsNewCustomer, Converter={StaticResource boolToVisConverter}, Mode=OneWay, ConverterParameter=true}"/>
                <AppBarButton Command="{x:Bind ViewModel.RefreshCommand}"
                              Icon="Refresh"
                              Label="Refresh"/>
            </CommandBar>

            <uc:CollapsibleSearchBox x:Name="CustomerSearchBox"
                                     Width="240"
                                     Margin="12,8,12,0"
                                     CollapseWidth="{StaticResource LargeWindowSnapPoint}"
                                     Loaded="CustomerSearchBox_Loaded"
                                     RelativePanel.AlignRightWithPanel="True"/>

            <Grid x:Name="errorPane"
                  Background="Firebrick"
                  Padding="12,0,0,0"
                  RelativePanel.AlignLeftWithPanel="True"
                  RelativePanel.AlignRightWithPanel="True"
                  RelativePanel.Below="PageTitle"
                  Visibility="Collapsed">
                <TextBlock Foreground="White"
                           Text="TBD"
                           TextWrapping="WrapWholeWords"/>
            </Grid>

            <ScrollViewer x:Name="DetailPanel"
                          RelativePanel.AlignLeftWithPanel="True"
                          RelativePanel.AlignRightWithPanel="True"
                          RelativePanel.Below="errorPane"
                          VerticalScrollBarVisibility="Auto"
                          VerticalScrollMode="Auto"
                          Visibility="{x:Bind ViewModel.Customer, Converter={StaticResource nullToVisConverter}}">
                <StackPanel Margin="0,8,4,0" DataContext="{x:Bind ViewModel.Customer, Mode=OneWay}">
                    <uc:DetailExpander Label="General">
                        <uc:DetailExpander.Pane>
                            <RelativePanel>
                                <TextBox x:Name="FirstName"
                                         MinWidth="120"
                                         Margin="0,8,16,8"
                                         Header="First name"
                                         IsReadOnly="{x:Bind ViewModel.IsInEdit, Converter={StaticResource boolInverterConverter}, Mode=OneWay}"
                                         RelativePanel.AlignLeftWithPanel="True"
                                         Text="{x:Bind ViewModel.Customer.FirstName, Mode=TwoWay}"
                                         Visibility="{x:Bind ViewModel.IsInEdit, Converter={StaticResource boolToVisConverter}, Mode=OneWay}"/>
                                <TextBox x:Name="LastName"
                                         MinWidth="120"
                                         Margin="0,8,16,8"
                                         Header="Last name"
                                         IsReadOnly="{x:Bind ViewModel.IsInEdit, Converter={StaticResource boolInverterConverter}, Mode=OneWay}"
                                         RelativePanel.RightOf="FirstName"
                                         Text="{x:Bind ViewModel.Customer.LastName, Mode=TwoWay}"
                                         Visibility="{x:Bind ViewModel.IsInEdit, Converter={StaticResource boolToVisConverter}, Mode=OneWay}"/>
                                <TextBox x:Name="CompanyText"
                                         Grid.Row="1"
                                         MinWidth="120"
                                         Margin="0,8,16,0"
                                         Header="Company name"
                                         IsReadOnly="{x:Bind ViewModel.IsInEdit, Converter={StaticResource boolInverterConverter}, Mode=OneWay}"
                                         RelativePanel.AlignLeftWithPanel="True"
                                         RelativePanel.Below="FirstName"
                                         Text="{x:Bind ViewModel.Customer.Company, Mode=TwoWay}"/>
                                <TextBox x:Name="PhoneNumber"
                                         Grid.Row="1"
                                         Grid.Column="1"
                                         MinWidth="132"
                                         Margin="0,8,16,0"
                                         Header="Primary phone"
                                         InputScope="TelephoneNumber"
                                         IsReadOnly="{x:Bind ViewModel.IsInEdit, Converter={StaticResource boolInverterConverter}, Mode=OneWay}"
                                         RelativePanel.Below="FirstName"
                                         RelativePanel.RightOf="CompanyText"
                                         Text="{x:Bind ViewModel.Customer.Phone, Mode=TwoWay}" />
                                <TextBox x:Name="EmailText"
                                         Grid.Column="2"
                                         MinWidth="160"
                                         Margin="0,8,16,0"
                                         Header="Primary email"
                                         InputScope="EmailNameOrAddress"
                                         IsReadOnly="{x:Bind ViewModel.IsInEdit, Converter={StaticResource boolInverterConverter}, Mode=OneWay}"
                                         RelativePanel.Below="FirstName"
                                         RelativePanel.RightOf="PhoneNumber"
                                         Text="{x:Bind ViewModel.Customer.Email, Mode=TwoWay}"/>
                            </RelativePanel>

                        </uc:DetailExpander.Pane>
                        <uc:DetailExpander.HeaderContent>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Style="{StaticResource CaptionTextBlockStyle}" Text="{x:Bind ViewModel.Customer.Email, Mode=OneWay}"/>
                                <AppBarSeparator Height="12"/>
                            </StackPanel>
                        </uc:DetailExpander.HeaderContent>
                    </uc:DetailExpander>

                    <uc:DetailExpander Label="Addresses">
                        <uc:DetailExpander.Pane>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="260"/>
                                    <ColumnDefinition MaxWidth="260"/>
                                    <ColumnDefinition MaxWidth="260"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Grid.ColumnSpan="3" Margin="0,8,0,0"
                                         Header="Primary address"
                                         IsReadOnly="{x:Bind ViewModel.IsInEdit, Converter={StaticResource boolInverterConverter}, Mode=OneWay}"
                                         Text="{x:Bind ViewModel.Customer.Address, Mode=TwoWay}" />
                            </Grid>
                        </uc:DetailExpander.Pane>
                        <uc:DetailExpander.HeaderContent>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Style="{StaticResource CaptionTextBlockStyle}" Text="{x:Bind ViewModel.Customer.Address, Mode=OneWay}"/>
                                <AppBarSeparator Height="12"/>
                            </StackPanel>
                        </uc:DetailExpander.HeaderContent>
                    </uc:DetailExpander>

                    <uc:DetailExpander Label="Orders">
                        <uc:DetailExpander.Pane>
                            <Grid Margin="0,8,0,0">
                                <Grid.Resources>
                                    <x:Double x:Key="InvoiceIdWidth">48</x:Double>
                                    <x:Double x:Key="DateWidth">64</x:Double>
                                    <x:Double x:Key="AmountWidth">72</x:Double>
                                    <x:Double x:Key="StatusWidth">64</x:Double>
                                    <x:Double x:Key="TermWidth">64</x:Double>
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="16"/>
                                    <RowDefinition Height="*"/>
                                    <!--
                                        It's important to not put the list view in a row with Height="Auto". If you do that,
                                        the list height won't be constrained and the scrollbars won't show up.
                                    -->
                                </Grid.RowDefinitions>
                                <StackPanel Background="{ThemeResource AccentBackgroundColor}" Orientation="Horizontal">
                                    <StackPanel.Resources>
                                        <Style BasedOn="{StaticResource HeaderTextBlockStyle}" TargetType="TextBlock">
                                            <Setter Property="FontSize" Value="12"/>
                                        </Style>
                                    </StackPanel.Resources>
                                    <TextBlock Width="{StaticResource InvoiceIdWidth}"
                                               Margin="12,0,0,0"
                                               Text="Invoice"/>
                                    <TextBlock Width="{StaticResource DateWidth}" Text="Placed"/>
                                    <TextBlock Width="{StaticResource DateWidth}" Text="Filled"/>
                                    <TextBlock Width="{StaticResource AmountWidth}" Text="Subtotal"/>
                                    <TextBlock Width="{StaticResource AmountWidth}" Text="Tax"/>
                                    <TextBlock Width="{StaticResource AmountWidth}" Text="Total"/>
                                    <TextBlock Width="{StaticResource StatusWidth}" Text="Status"/>
                                    <TextBlock Width="{StaticResource TermWidth}" Text="Term"/>
                                </StackPanel>
                                <ProgressBar x:Name="ProgressIndicator"
                                             Grid.Row="1"
                                             Margin="0,4"
                                             HorizontalAlignment="Stretch"
                                             VerticalAlignment="Top"
                                             IsIndeterminate="True"
                                             Visibility="{x:Bind ViewModel.IsLoading, Converter={StaticResource boolToVisConverter}, Mode=OneWay}">
                                </ProgressBar>
                                <ListView x:Name="OrdersListView"
                                          Grid.Row="1"
                                          ItemsSource="{x:Bind ViewModel.Orders, Mode=OneWay}">
                                    <ListView.ItemTemplate>
                                        <DataTemplate x:DataType="models:Order">
                                            <StackPanel Orientation="Horizontal">
                                                <StackPanel.Resources>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="FontSize" Value="12"/>
                                                    </Style>
                                                </StackPanel.Resources>
                                                <HyperlinkButton Width="{StaticResource InvoiceIdWidth}"
                                                                 HorizontalContentAlignment="Left"
                                                                 Click="ViewOrderButton_Click"
                                                                 Content="{x:Bind InvoiceNumber}"
                                                                 FontSize="12"
                                                                 IsTabStop="False"
                                                                 Padding="0"/>
                                                <TextBlock Width="{StaticResource DateWidth}" Text="{x:Bind DatePlaced, Converter={StaticResource dateStringFormatConverter}}"/>
                                                <TextBlock Width="{StaticResource DateWidth}" Text="{x:Bind DateFilled, Converter={StaticResource dateStringFormatConverter}}"/>
                                                <TextBlock Width="{StaticResource AmountWidth}" Text="{x:Bind Subtotal}"/>
                                                <TextBlock Width="{StaticResource AmountWidth}" Text="{x:Bind Tax}"/>
                                                <TextBlock Width="{StaticResource AmountWidth}" Text="{x:Bind GrandTotal}"/>
                                                <TextBlock Width="{StaticResource StatusWidth}" Text="{x:Bind PaymentStatus}"/>
                                                <TextBlock Width="{StaticResource TermWidth}" Text="{x:Bind Term}"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </Grid>
                        </uc:DetailExpander.Pane>
                    </uc:DetailExpander>
                </StackPanel>
            </ScrollViewer>
        </RelativePanel>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}"/>
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}"/>
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="EmailText.(RelativePanel.AlignLeftWithPanel)" Value="True"/>
                        <Setter Target="EmailText.(RelativePanel.Below)" Value="CompanyText"/>
                        <Setter Target="DetailPanel.Margin" Value="12,0,0,0"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <stateTriggers:MobileScreenTrigger InteractionMode="Touch"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="DetailPanel.(RelativePanel.Above)" Value="mainCommandBar"/>
                        <Setter Target="mainCommandBar.(RelativePanel.AlignBottomWithPanel)" Value="True"/>
                        <Setter Target="mainCommandBar.(RelativePanel.AlignLeftWithPanel)" Value="True"/>
                        <Setter Target="mainCommandBar.(RelativePanel.AlignRightWithPanel)" Value="True"/>
                        <Setter Target="CustomerSearchBox.Width" Value="300"/>
                        <Setter Target="EmailText.(RelativePanel.AlignLeftWithPanel)" Value="True"/>
                        <Setter Target="EmailText.(RelativePanel.Below)" Value="CompanyText"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
